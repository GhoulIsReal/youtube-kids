{"version":3,"sources":["games/Puzzle/styles.js","games/Puzzle/components/DraggableList.js","games/Puzzle/Puzzle.js"],"names":["GameContainer","styled","div","rotate","keyframes","height","window","screen","width","WinContainer","Content","img","temp","fn","order","down","originalIndex","curIndex","y","index","scale","zIndex","shadow","immediate","n","indexOf","items","setCompleted","useRef","map","_","useSprings","length","current","springs","setSprings","bind","useGesture","vars","args","delta","curRow","clamp","Math","round","newOrder","swap","event","type","isEqual","i","key","style","boxShadow","interpolate","s","transform","props","images","useImagesContext","useState","currentImage","setCurrentImage","completed","useEffect","disablePageScroll","enablePageScroll","Object","keys","imageNumber","randomInt","content","DraggableList","split","src","alt","bg","size","filter","className","onClick","goBackToVideo","undefined"],"mappings":"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","file":"static/js/20.c2e43846.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\r\n\r\nexport const GameContainer = styled.div`\r\n  max-width: 550px;\r\n  height: 95vh;\r\n  max-height: 750px;\r\n  width: 100%;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  margin: 0 auto;\r\n  border-radius: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  padding-top: 20px;\r\n\r\n  .inner {\r\n    height: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transform: translateY(-10%);\r\n  }\r\n  .options {\r\n    align-self: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    height: 15%;\r\n    width: 100%;\r\n    padding: 0 10%;\r\n    max-height: 100px;\r\n    @media screen and (max-height: 846px) and (orientation: portrait) {\r\n      max-height: 70px;\r\n//      margin-bottom: 10%;\r\n    }\r\n//    margin-bottom: 3%;\r\n    > img {\r\n      height: 100%;\r\n      border: 2px solid #ffffff;\r\n      padding: 0px;\r\n      background: lightblue;\r\n      cursor: pointer;\r\n      transform: scale(1);\r\n      transition: 0.1s transform;\r\n      &:hover {\r\n        transform: scale(1.1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n100% {\r\n  transform: rotate(1turn);\r\n}\r\n`;\r\n\r\nlet height = 450;\r\n\r\nif (window.screen.height <= 640 || window.screen.width <= 412 ) {\r\n  height = 300;\r\n}\r\n\r\nif (window.screen.height <= 480) {\r\n  height = 300;\r\n}\r\nif (window.screen.height <= 412) {\r\n  height = 200;\r\n}\r\n\r\n\r\nexport const WinContainer = styled.div`\r\n  margin: 0 auto;\r\n  width: ${height}px;\r\n  //height:${height}px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 0;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  padding: 1rem;\r\n  background: lightblue;\r\n  > img {\r\n    width: 100%;\r\n   // height: 100%;\r\n    background: lightblue;\r\n  }\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: -2;\r\n    left: -50%;\r\n    top: -50%;\r\n    width: 200%;\r\n    height: 200%;\r\n    background-color: #399953;\r\n    background-repeat: no-repeat;\r\n    background-size: 50% 50%, 50% 50%;\r\n    background-position: 0 0, 100% 0, 100% 100%, 0 100%;\r\n    background-image: linear-gradient(#399953, #399953),\r\n      linear-gradient(#fbb300, #fbb300), linear-gradient(#d53e33, #d53e33),\r\n      linear-gradient(#377af5, #377af5);\r\n    animation: ${rotate} 4s linear infinite;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: -1;\r\n    left: 6px;\r\n    top: 6px;\r\n    width: calc(100% - 12px);\r\n    height: calc(100% - 12px);\r\n    background: white;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const Content = styled.div`\r\n  grid-area: content;\r\n  position: relative;\r\n  width: ${height}px;\r\n  height: ${height}px;\r\n  align-self: center;\r\n  margin: 0 auto;\r\n  > div {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: ${height / 5}px;\r\n    overflow: visible;\r\n    pointer-events: auto;\r\n    transform-origin: 50% 50% 0px;\r\n    border-radius: 5px;\r\n    color: white;\r\n    font-size: 1.6rem;\r\n    background: lightblue;\r\n    border: 2px #fff solid;\r\n    background-image: url(${({ img }) => img});\r\n    background-size: 100%;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  > div:nth-child(5) {\r\n    background-position: 0 0;\r\n  }\r\n  > div:nth-child(2) {\r\n    background-position: 0 25%;\r\n  }\r\n  > div:nth-child(1) {\r\n    background-position: 0 50%;\r\n  }\r\n  > div:nth-child(4) {\r\n    background-position: 0 75%;\r\n  }\r\n  > div:nth-child(3) {\r\n    background-position: 0 100%;\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\n\r\nimport clamp from \"lodash-es/clamp\";\r\nimport { isEqual } from \"lodash-es\";\r\nimport swap from \"lodash-move\";\r\nimport { useGesture } from \"react-use-gesture\";\r\nimport { useSprings, animated, interpolate } from \"react-spring\";\r\n\r\nimport { Content } from \"../styles\";\r\n\r\nlet temp = 100;\r\n\r\n//if(window.screen.height <= 768) {\r\n//  temp = 80;\r\n//}\r\n\r\nif(window.screen.height <= 640 || window.screen.width <= 412 ) {\r\n  temp = 70;\r\n}\r\n\r\nif(window.screen.height <= 480 ) {\r\n  temp = 60;\r\n}\r\nif(window.screen.height <= 412   ) {\r\n  temp = 40;\r\n}\r\n\r\n\r\n// Returns fitting styles for dragged/idle items\r\nconst fn = (order, down, originalIndex, curIndex, y) => index =>\r\n  down && index === originalIndex\r\n    ? {\r\n        y: curIndex * temp + y,\r\n        scale: 1,\r\n        zIndex: \"1\",\r\n        shadow: 15,\r\n        immediate: n => n === \"y\" || n === \"zIndex\"\r\n      }\r\n    : {\r\n        y: order.indexOf(index) * temp,\r\n        scale: 1,\r\n        zIndex: \"0\",\r\n        shadow: 1,\r\n        immediate: false\r\n      };\r\n\r\nexport default ({ items, setCompleted, img }) => {\r\n  const order = useRef(items.map((_, index) => index)); // Store indicies as a local ref, this represents the item order\r\n  const [springs, setSprings] = useSprings(items.length, fn(order.current)); // Create springs, each corresponds to an item, controlling its transform, scale, etc.\r\n  const bind = useGesture(vars => {\r\n    const {\r\n      args: [originalIndex],\r\n      down,\r\n      delta: [, y]\r\n    } = vars;\r\n    const curIndex = order.current.indexOf(originalIndex);\r\n    const curRow = clamp(\r\n      Math.round((curIndex * temp + y) / temp),\r\n      0,\r\n      items.length - 1\r\n    );\r\n    const newOrder = swap(order.current, curIndex, curRow);\r\n    setSprings(fn(newOrder, down, originalIndex, curIndex, y)); // Feed springs new style data, they'll animate the view without causing a single render\r\n    if (!down) order.current = newOrder;\r\n\r\n    if (vars.event.type === \"mouseup\" || vars.event.type === \"touchend\") {\r\n      if (isEqual(newOrder, [4, 1, 0, 3, 2])) {\r\n        setCompleted(true);\r\n      }\r\n    }\r\n\r\n  });\r\n  return (\r\n    <Content img={img} height={temp}>\r\n      {springs.map(({ zIndex, shadow, y, scale }, i) => (\r\n        <animated.div\r\n          {...bind(i)}\r\n          key={i}\r\n          style={{\r\n            zIndex,\r\n            boxShadow: shadow.interpolate(\r\n              s => `rgba(0, 0, 0, 0.15) 0px ${s}px ${2 * s}px 0px`\r\n            ),\r\n            transform: interpolate(\r\n              [y, scale],\r\n              (y, s) => `translate3d(0,${y}px,0) scale(${s})`\r\n            )\r\n          }}\r\n//          children={items[i]}\r\n        />\r\n      ))}\r\n    </Content>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { disablePageScroll, enablePageScroll } from \"scroll-lock\";\r\n\r\nimport { Game, Button } from \"../../common/styles\";\r\nimport { GameContainer, WinContainer } from \"./styles\";\r\n\r\nimport DraggableList from \"./components/DraggableList\";\r\n\r\n\r\nimport { useImagesContext } from \"../../contexts/ImagesContext\";\r\n\r\nimport randomInt from \"../../common/utils/randomInt\";\r\n\r\nexport default (props) => {\r\n  const { images } = useImagesContext();\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    disablePageScroll();\r\n    return ()=> {\r\n      enablePageScroll();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(images).length > 0) {\r\n      const imageNumber = randomInt(1, Object.keys(images).length)\r\n      setCurrentImage(images[`${imageNumber}.png`]);\r\n    }\r\n  }, [images]);\r\n\r\n  let content = (\r\n    <DraggableList\r\n      items={\"1 2 3 4 5\".split(\" \")}\r\n      setCompleted={setCompleted}\r\n      img={currentImage}\r\n    />\r\n  );\r\n\r\n\r\n  if (completed) {\r\n    content = (\r\n      <WinContainer>\r\n        <img src={currentImage} alt=\"puzzle\"  />\r\n      </WinContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Game bg={images[\"bg.png\"]} size=\"400px\" filter=\"1\" >\r\n      {/* <Nav type=\"back\" to=\"/shop\" /> */}\r\n      <GameContainer>\r\n          <div className=\"options\">\r\n            <Button onClick={completed ? props.goBackToVideo : undefined}>{completed ? \"Go back to video!\" : \"Puzzle\"}</Button>\r\n          </div>\r\n          <div className=\"inner\">\r\n          {content}\r\n          </div>\r\n      </GameContainer>\r\n    </Game>\r\n  );\r\n};\r\n"],"sourceRoot":""}