{"version":3,"sources":["games/Shop/components/Bag/styles.js","games/Shop/components/Bag/Bag.js","games/Shop/config.js","games/Shop/components/Items.js","games/Shop/components/Timer/styles.js","games/Shop/components/Timer/Timer.js","games/Shop/components/Timer/PlayingTimer.js","games/Shop/components/Control.js","games/Shop/styles.js","games/Shop/Shop.js"],"names":["Rules","styled","div","Container","bag","Task","filter","props","productsToBuy","status","selectedIndex","reset","goBackToVideo","images","useImagesContext","propsSelected","useSpring","from","transform","to","onClick","map","item","i","key","className","selected","style","src","name","alt","vegetables","fruits","other","Items","mixinLeft","ItemsLeft","ItemsRight","ItemsBottom","select","TimerCss","TimerThreadCss","topBubbles","keyframes","bottomBubbles","Bum","Timer","animated","TimerThread","TimerDefault","propsBalloon","delay","propsThread","PlayingTimer","propsTimer","number","config","duration","onRest","onRestHandler","propsTimer2","text","interpolate","n","toFixed","Control","Bear","bear","fail","minHeight","width","GameContainer","ShopContainer","Shop","useState","setProductsToBuy","setStatus","setSelectedIndex","setRandomItems","useCallback","concat","Array","length","fill","reduce","acc","arr","sort","Math","random","slice","val","newItem","useEffect","bg","size","Bag","e","foundIndex","findIndex","target","newProductsToBuy"],"mappings":"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","file":"static/js/19.04a2fb19.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport bag from \"../../images/bag.png\";\r\nimport filter from \"../../images/filter.svg\";\r\n\r\n\r\n\r\nexport const Rules = styled.div`\r\n  position: absolute;\r\n  top: 55%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1000;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:center;\r\n  font-size: 2rem;\r\n  background-color: #fff;\r\n  color: #333;\r\n  padding: 3rem;\r\n  width: 40%;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  box-sizing: unset;\r\n\r\n  @media screen and (max-width: 991px) {\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    width: 70%;\r\n  }\r\n\r\n  @media screen and (max-height: 320px) {\r\n    font-size: 1rem;\r\n    width: 45%;\r\n  }\r\n\r\n  @media screen and (max-height: 213px) {\r\n    height: 70%;\r\n    width: auto;\r\n  }\r\n\r\n\r\n`;\r\nexport const Container = styled.div`\r\n  grid-area: cart;\r\n  background-image: url(${bag});\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 15%;\r\n  position: relative;\r\n  width: 70%;\r\n`;\r\n\r\nexport const Task = styled.div`\r\n  position: relative;\r\n  width: 65%;\r\n  height: 55%;\r\n  margin-left: 1%;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(24%, 1fr));\r\n  grid-template-rows: repeat(3, minmax(24%, 1fr));\r\n  grid-gap: 1%;\r\n\r\n  @media screen and (max-height: 960px) and (orientation: portrait) {\r\n    height: 42%;\r\n  }\r\n\r\n  @media screen and (max-width: 846px) and (orientation: landscape) {\r\n    width: 59%;\r\n  }\r\n\r\n  > div {\r\n    background-image: linear-gradient(\r\n      to right bottom,\r\n      rgba(0,0,0, 0.1),\r\n      rgba(0,0,0, 0.2)\r\n    );\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      min-width: 20px;\r\n      min-height: 20px;\r\n    }\r\n    &.gray {\r\n      filter: url(${filter}#grayscale);\r\n      filter: gray;\r\n      -webkit-filter: grayscale(1);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport { useImagesContext } from \"../../../../contexts/ImagesContext\";\r\n\r\nimport { Rules, Task, Container } from \"./styles\";\r\nimport { Button } from \"../../../../common/styles\";\r\n\r\nexport default props => {\r\n  const { productsToBuy, status, selectedIndex, reset, goBackToVideo} = props;\r\n  const { images } = useImagesContext();\r\n\r\n  const propsSelected = useSpring({\r\n    from: { transform: \"scale(1)\" },\r\n    to: [{ transform: \"scale(1.1)\" }, { transform: \"scale(1)\" }]\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n        {status !== 'playing' && (\r\n            <Rules>\r\n              { (status === 'win' ) && (<>Well done!</>)}\r\n              {status === 'fail' && 'Try one more time!'}\r\n              {!status && 'Click at products and pack a bag in 60 seconds!'}\r\n              <Button onClick={(status === 'win' ) ? goBackToVideo : reset}>{ (status === 'win' ) ? (<>Go back to video!</>) : (<>Start!</>)}</Button>\r\n            </Rules>\r\n        )}\r\n\r\n      <Task>\r\n        {productsToBuy.map((item, i) => (\r\n            <animated.div key={`p${i}`}\r\n              className={`item ${item.selected ? null : \"gray\"}`}\r\n              style={\r\n                item.selected && selectedIndex === i ? propsSelected : null\r\n              }\r\n            >\r\n              <img src={images[item.name + \".svg\"]} alt={item.name} />\r\n            </animated.div>\r\n        ))}\r\n      </Task>\r\n    </Container>\r\n  );\r\n};\r\n","export const vegetables = [\r\n  \"tomato\",\r\n  \"onion\",\r\n  \"potato\",\r\n  \"broccoli\",\r\n  \"cabbage\",\r\n  \"carrot\"\r\n];\r\nexport const fruits = [\r\n  \"watermelon\",\r\n  \"grapes\",\r\n  \"orange\",\r\n  \"apple\",\r\n  \"bananas\",\r\n  \"strawberry\",\r\n  \"pineapple\"\r\n];\r\nexport const other = [\"milk\", \"pasta\", \"croissant\", \"mustard\", \"eggs\", \"jam\"];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useImagesContext } from \"../../../contexts/ImagesContext\";\r\n\r\nimport { vegetables, fruits, other } from \"../config\";\r\n\r\nconst Items = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  height: 100%;\r\n  @media screen and (max-width: 768px) and (orientation: portrait) {\r\n    height: 15%;\r\n    min-height: 30px;\r\n    width: 100%;\r\n  }\r\n  img {\r\n    width: 60px;\r\n    height: 60px;\r\n    cursor: pointer;\r\n    //width: 100%;\r\n    //height: 100%;\r\n\r\n\r\n    @media screen and (max-width: 768px) {\r\n      max-width: 40px;\r\n      max-height: 40px;\r\n    }\r\n\r\n    @media screen and (max-width: 320px) {\r\n      max-width: 25px;\r\n      max-height: 25px;\r\n    }\r\n\r\n    @media screen and (max-height: 412px) {\r\n      max-width: 30px;\r\n      max-height: 30px;\r\n    }\r\n\r\n    @media screen and (max-height: 320px) {\r\n      max-width: 25px;\r\n      max-height: 25px;\r\n    }\r\n\r\n    @media screen and (max-height: 213px) {\r\n      max-width: 20px;\r\n      max-height: 20px;\r\n    }\r\n\r\n  }\r\n`;\r\n\r\nconst mixinLeft = `\r\nflex-direction: row;\r\npadding-top: 0;\r\nalign-items: center;`;\r\n\r\nconst ItemsLeft = styled(Items)`\r\n  width: 100%;\r\n  padding-top: 50px;\r\n  grid-area: items-left;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  @media screen and (max-width: 768px) and (orientation: portrait) {\r\n    ${mixinLeft}\r\n  }\r\n\r\n`;\r\n\r\nconst ItemsRight = styled(Items)`\r\n  width: 100%;\r\n  padding-top: 50px;\r\n  grid-area: items-right;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  @media screen and (max-width: 768px) and (orientation: portrait) {\r\n    ${mixinLeft}\r\n  }\r\n`;\r\n\r\n\r\nconst ItemsBottom = styled(Items)`\r\n  grid-area: items-bottom;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 95%;\r\n  height: 5%;\r\n  @media screen and (min-width: 768px) and (orientation: portrait) {\r\n    //width: 100%;\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport default ({ select }) => {\r\n  const { images } = useImagesContext();\r\n\r\n  return (\r\n    <>\r\n      <ItemsLeft>\r\n        {vegetables.map((name, i) => (\r\n          <div key={i}>\r\n            <img src={images[name + \".svg\"]} alt={name} onClick={select} />\r\n          </div>\r\n        ))}\r\n      </ItemsLeft>\r\n\r\n      <ItemsRight>\r\n        {other.map((name, i) => (\r\n          <div key={i}>\r\n            <img src={images[name + \".svg\"]} alt={name} onClick={select} />\r\n          </div>\r\n        ))}\r\n      </ItemsRight>\r\n\r\n      <ItemsBottom>\r\n        {fruits.map((name, i) => (\r\n          <div key={i}>\r\n            <img src={images[name + \".svg\"]} alt={name} onClick={select} />\r\n          </div>\r\n        ))}\r\n      </ItemsBottom>\r\n    </>\r\n  );\r\n};\r\n","import styled, { keyframes} from \"styled-components\";\r\n\r\nconst balloonColor = \"#e74c3c\";\r\n\r\nexport const TimerCss = `\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 100%;\r\nmin-height: 150px;\r\nmax-height: 180px;\r\nbackground-color: ${balloonColor};\r\nborder-radius: 50% 50% 50% 50% / 40% 40% 60% 60%;\r\ncolor: #fff;\r\nfont-size: 3rem;\r\n@media screen and (max-height: 568px) {\r\n  font-size: 2rem;\r\n  height: 100px;\r\n  min-height: 100px;\r\n}\r\n\r\n@media screen and (max-height: 213px) {\r\n  height: 50px;\r\n  min-height: 50px;\r\n}\r\n\r\n@media screen and (max-height: 667px) {\r\n  height: 100px;\r\n  min-height: 100px;\r\n}\r\n\r\n@media screen and (min-width: 568px) {\r\n  font-size: 5rem;\r\n}\r\n\r\npadding: 0px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nposition: relative;\r\nz-index: 20;\r\n\r\n&::after {\r\n  content: \"\";\r\n  width: 10%;\r\n  height: 10%;\r\n  border-left: 20px solid transparent;\r\n  border-right: 20px solid transparent;\r\n  border-bottom: 20px solid ${balloonColor};\r\n  position: absolute;\r\n  left: 30%;\r\n  bottom: -6%;\r\n  z-index: 20;\r\n  @media screen and (max-height: 568px) {\r\n    border-left-width:10px;\r\n      border-right-width: 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    border-left-width:10px;\r\n      border-right-width: 10px;\r\n  }\r\n\r\n}\r\n\r\n`;\r\nexport const TimerThreadCss = `\r\n  width: 2px;\r\n  height: 57%;\r\n  background: #000;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 30%;\r\n  margin-left: 47%;\r\n\r\n  @media screen and (max-height: 667px) {\r\n    width: 1px;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst balloonColorLight = \"#c0392b\";\r\n\r\nconst topBubbles = keyframes`\r\n  0% {\r\n    background-position: 5% 90%, 10% 90%, 10% 90%, 15% 90%, 25% 90%, 25% 90%,\r\n      40% 90%, 55% 90%, 70% 90%;\r\n  }\r\n  50% {\r\n    background-position: 0% 80%, 0% 20%, 10% 40%, 20% 0%, 30% 30%, 22% 50%,\r\n      50% 50%, 65% 20%, 90% 30%;\r\n  }\r\n  100% {\r\n    background-position: 0% 70%, 0% 10%, 10% 30%, 20% -10%, 30% 20%, 22% 40%,\r\n      50% 40%, 65% 10%, 90% 20%;\r\n    background-size: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%;\r\n  }\r\n}`;\r\n\r\nconst bottomBubbles = keyframes`\r\n  0% {\r\n    background-position: 10% -10%, 30% 10%, 55% -10%, 70% -10%, 85% -10%,\r\n      70% -10%, 70% 0%;\r\n  }\r\n  50% {\r\n    background-position: 0% 80%, 20% 80%, 45% 60%, 60% 100%, 75% 70%, 95% 60%,\r\n      105% 0%;\r\n  }\r\n  100% {\r\n    background-position: 0% 90%, 20% 90%, 45% 70%, 60% 110%, 75% 80%, 95% 70%,\r\n      110% 10%;\r\n    background-size: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%;\r\n  }\r\n`;\r\n\r\nexport const Bum = styled.div`\r\n  width: 50%;\r\n  height: 50%;\r\n  position: absolute;\r\n  bottom: 20%;\r\n  left: 10%;\r\n  display: block;\r\n  border-radius: 50%;\r\n  padding: 0rem;\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    content: \"\";\r\n    display: block;\r\n    width: 100px;\r\n    height: 100%;\r\n    left: 0;\r\n    z-index: 1000;\r\n    transition: all ease-in-out 0.5s;\r\n    background-repeat: no-repeat;\r\n  }\r\n  &:before {\r\n    top: -35%;\r\n    display: block;\r\n    animation: ${topBubbles} ease-in-out 0.75s forwards;\r\n    background-image: radial-gradient(\r\n        circle,\r\n        ${balloonColorLight} 50%,\r\n        transparent 20%\r\n      ),\r\n      radial-gradient(\r\n        circle,\r\n        transparent 20%,\r\n        ${balloonColorLight} 50%,\r\n        transparent 30%\r\n      ),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(\r\n        circle,\r\n        transparent 10%,\r\n        ${balloonColorLight} 35%,\r\n        transparent 20%\r\n      ),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%);\r\n    background-size: 2% 2%, 4% 4%, 7% 7%, 4% 4%, 9% 9%, 5% 5%, 3% 3%, 5% 5%,\r\n      2% 2%;\r\n  }\r\n  &:after {\r\n    display: block;\r\n    animation: ${bottomBubbles} ease-in-out 0.75s forwards;\r\n    bottom: -35%;\r\n    background-image: radial-gradient(\r\n        circle,\r\n        ${balloonColorLight} 50%,\r\n        transparent 20%\r\n      ),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(\r\n        circle,\r\n        transparent 10%,\r\n        ${balloonColorLight} 35%,\r\n        transparent 20%\r\n      ),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%),\r\n      radial-gradient(circle, ${balloonColorLight} 50%, transparent 20%);\r\n    background-size: 5% 5%, 6% 6%, 7% 7%, 8% 8%, 9% 9%, 10% 10%, 5% 5%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { TimerCss, TimerThreadCss, Bum } from \"./styles\";\r\n\r\nconst Timer = styled(animated.div)`\r\n  ${TimerCss}\r\n`;\r\nconst TimerThread = styled(animated.div)`\r\n  ${TimerThreadCss}\r\n`;\r\n\r\nconst TimerDefault = ({ status }) => {\r\n  const propsBalloon = useSpring({\r\n    from: { transform: `scale(0)` },\r\n    to: { transform: `scale(1)` },\r\n    delay: !status ? 0 : 1000\r\n  });\r\n\r\n  const propsThread = useSpring({\r\n    from: { transform: `scale(0)` },\r\n    to: { transform: `scale(1)` },\r\n    delay: !status? 0 : 1000\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {status === \"fail\" ? <Bum /> : null}\r\n\r\n      <Timer style={propsBalloon}>60</Timer>\r\n      <TimerThread style={propsThread} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TimerDefault as Timer };\r\n","import React from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {TimerCss, TimerThreadCss} from \"./styles\";\r\n\r\nconst Timer = styled(animated.div)`${TimerCss}`;\r\nconst TimerThread = styled.div`${TimerThreadCss}`;\r\n\r\nconst PlayingTimer = props => {\r\n  const propsTimer = useSpring({\r\n    from: { number: 60, transform: \"scale(1)\" },\r\n    to: [{ number: 0, transform: \"scale(1.4)\", config: { duration: 60000 } }],\r\n    number: 0,\r\n    onRest: props.onRestHandler,\r\n    reset: props.reset\r\n  });\r\n\r\n  let propsTimer2 = {\r\n    ...propsTimer,\r\n    text: propsTimer.number.interpolate(n => {\r\n      return n.toFixed();\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Timer style={propsTimer2}>\r\n        {propsTimer2.text}\r\n      </Timer>\r\n      <TimerThread />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { PlayingTimer }\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Timer, PlayingTimer } from \"./Timer\";\r\n\r\nimport bear from \"../images/bear.svg\";\r\n\r\nconst Control = styled.div`\r\n  padding-top: 10%;\r\n  height: 100%;\r\n  width: 15%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst Bear = styled.div`\r\n  width: 100%;\r\n  height: 30%;\r\n  background-image: url(${bear});\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 0%;\r\n  position: absolute;\r\n  top: 70%;\r\n  right: -35%;\r\n`;\r\n\r\nexport default ({ status, fail }) => {\r\n  return (\r\n    <Control>\r\n      <div style={{ minHeight: \"40%\", width: \"100%\" }}>\r\n        {status !== \"playing\" ? (\r\n          <Timer status={status} />\r\n        ) : (\r\n          <PlayingTimer onRestHandler={fail} />\r\n        )}\r\n      </div>\r\n      <Bear />\r\n    </Control>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const GameContainer = styled.div`\r\n  margin: auto;\r\n  max-width: 990px;\r\n  height: 95vh;\r\n  max-height: 900px;\r\n  width: 100%;\r\n  background: rgba(255, 255, 255, 0.7);\r\n  position: relative;\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: minmax(40px, 9%) 1fr minmax(40px, 9%);\r\n  grid-template-rows: 1fr minmax(40px, 13%);\r\n  grid-template-areas:\r\n    \"items-left cart items-right\"\r\n    \"items-left items-bottom items-right\";\r\n\r\n    @media screen and (max-width: 768px) and (orientation: portrait) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @media screen and (max-height: 480px) and (orientation: portrait) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const ShopContainer = styled.div`\r\nwidth: 100%;\r\npadding: 70px 0 10px 0;\r\n\r\n@media screen and (max-height: 667px) {\r\n  padding-top: 20px;\r\n}\r\n\r\ndisplay: flex;\r\nheight: 100%;\r\n//min-height: 400px;\r\nmin-width: 230px;\r\njustify-content: center;\r\nposition: relative;`\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport Bag from \"./components/Bag/Bag\";\r\nimport Items from \"./components/Items\";\r\nimport { Roof } from \"../../common/styles\";\r\nimport Control from \"./components/Control\";\r\n\r\nimport { Game } from \"../../common/styles\";\r\nimport { GameContainer, ShopContainer } from \"./styles\";\r\n\r\nimport { vegetables, fruits, other } from \"./config\";\r\nimport bg from \"./images/bg.png\";\r\n\r\nimport \"./Shop.css\";\r\n\r\nconst Shop = props => {\r\n\r\n  const [productsToBuy, setProductsToBuy] = useState([]);\r\n  const [status, setStatus] = useState(null); // playing, fail, win\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n\r\n  const setRandomItems = useCallback(() => {\r\n    const productsToBuy = vegetables\r\n      .concat(fruits)\r\n      .concat(other)\r\n      .map(item => {\r\n        return Array.from({ length: 4 }).fill(item);\r\n      })\r\n      .reduce((acc, arr) => acc.concat(arr), [])\r\n      .sort(() => 0.5 - Math.random())\r\n      .slice(0, 12)\r\n      .sort()\r\n      .reduce((acc, val) => {\r\n        const newItem = {\r\n          selected: false,\r\n          name: val\r\n        };\r\n        return [...acc, newItem];\r\n      }, []);\r\n    setProductsToBuy(productsToBuy);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRandomItems();\r\n  }, [setRandomItems]);\r\n\r\n\r\n  const fail = () => {\r\n    setStatus(\"fail\");\r\n  };\r\n\r\n  const win = () => {\r\n    setStatus(\"win\");\r\n  };\r\n\r\n  const reset = () => {\r\n    setStatus(\"playing\");\r\n    setRandomItems();\r\n  };\r\n\r\n  const select = e => {\r\n    if (status !== \"playing\") return;\r\n    const foundIndex = productsToBuy.findIndex(\r\n      item => e.target.alt === item.name && !item.selected\r\n    );\r\n    if (foundIndex !== -1) {\r\n      const newProductsToBuy = [...productsToBuy];\r\n      newProductsToBuy[foundIndex] = {\r\n        ...productsToBuy[foundIndex],\r\n        selected: true\r\n      };\r\n      setProductsToBuy(newProductsToBuy);\r\n      setSelectedIndex(foundIndex);\r\n      if (newProductsToBuy.findIndex(item => item.selected === false) === -1) {\r\n        win();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Game bg={bg} size=\"cover\">\r\n      {/* <Nav type=\"back\" to=\"/\" /> */}\r\n      <GameContainer>\r\n        <Roof />\r\n\r\n        <ShopContainer>\r\n          <Bag\r\n            productsToBuy={productsToBuy}\r\n            reset={reset}\r\n            status={status}\r\n            selectedIndex={selectedIndex}\r\n            goBackToVideo={props.goBackToVideo}\r\n          />\r\n\r\n          <Control fail={fail} status={status} />\r\n        </ShopContainer>\r\n\r\n        <Items select={select} />\r\n      </GameContainer>\r\n\r\n      {/* <Nav type=\"next\" to=\"/puzzle\" /> */}\r\n    </Game>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n"],"sourceRoot":""}