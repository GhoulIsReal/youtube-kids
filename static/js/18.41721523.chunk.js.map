{"version":3,"sources":["../node_modules/classnames/index.js","games/Memory/components/Header.js","games/Memory/components/CardListItem.js","games/Memory/components/CardList.js","games/Memory/actions/memory.js","games/Memory/containers/Memory.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","round","gameFinished","goBackToVideo","className","onClick","undefined","disabled","card","flipCard","cardClass","flipped","discovered","id","src","url","alt","cards","map","CardListItem","MemoryActions","type","FLIP_CARD","restart","RESTART_GAME","Memory","this","props","memory","actions","some","Header","CardList","ref","myRef","Component","connect","state","dispatch","bindActionCreators"],"mappings":";wGAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3ChB,EAAWiB,QAAUjB,EACrBe,EAAOC,QAAUhB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,6ICJc,kBACXkB,EADW,EACXA,MACAC,EAFW,EAEXA,aACAC,EAHW,EAGXA,cAHW,OAKX,6BACI,kBAAC,IAAD,CAAQC,UAAU,qCAAqCC,QAASH,EAAeC,OAAgBG,EAAWC,SAAoB,IAAVN,GAC9GC,EAAe,oBAAsB,4B,kBCPpC,cAGR,IAFHM,EAEE,EAFFA,KACAC,EACE,EADFA,SAGIC,EAAY3B,IAAW,CACvB,SAAY,EACZ,QAAYyB,EAAKG,SAAWH,EAAKI,aAGrC,OACI,wBAAIR,UAAU,kBACV,yBAAKA,UAAWM,GACZ,yBAAKN,UAAU,QAAQC,QAAS,kBAAMI,EAASD,EAAKK,OAC1D,yBAAKT,UAAU,QACL,yBAAKU,IAAKN,EAAKO,IAAKC,IAAI,SCd7B,kBACXC,EADW,EACXA,MACAR,EAFW,EAEXA,SAFW,OAIX,wBAAIL,UAAU,SAENa,EAAMC,KAAI,SAAAV,GAAI,OACV,kBAACW,EAAD,CACIxB,IAAKa,EAAKK,GACVL,KAAMA,EACNC,SAAUA,S,QCCfW,EAbO,CAElBX,SAAW,SAACI,GAAD,MAAS,CAChBQ,KAAOC,IACPT,OAGJU,QAAU,iBAAO,CACbF,KAAOG,OCQTC,G,8KACQ,IAAD,EACsCC,KAAKC,MAAxCC,EADH,EACGA,OAAQC,EADX,EACWA,QAAS1B,EADpB,EACoBA,cACnBD,GAAgB0B,EAAOX,MAAMa,MAAK,SAAAtB,GAAI,OAAKA,EAAKI,cAEtD,OACI,yBAAKR,UAAU,aACX,kBAAC2B,EAAD,CAAQ9B,MAAO2B,EAAO3B,MAAOC,aAAcA,EAAcC,cAAeA,IACxE,kBAAC6B,EAAD,CAAUC,IAAKP,KAAKQ,MAAOjB,MAAOW,EAAOX,MAAOR,SAAUoB,EAAQpB,gB,GAR7D0B,cAcNC,6BAtBS,SAACC,GAAD,MAAY,CAChCT,OAASS,EAAMT,WAGQ,SAACU,GAAD,MAAe,CACtCT,QAASU,6BAAmBnB,EAAekB,MAiBhCF,CAA6CX","file":"static/js/18.41721523.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport { Button } from '../../../common/styles'\r\n\r\nexport default ({\r\n    round,\r\n    gameFinished,\r\n    goBackToVideo\r\n}) => (\r\n    <div>\r\n        <Button className=\"button button--warning text-center\" onClick={gameFinished ? goBackToVideo : undefined} disabled={round === 0}>\r\n            { gameFinished ? \"Go Back To Video!\" : \"Challenge your memory!\" }\r\n        </Button>\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default ({\r\n    card,\r\n    flipCard\r\n}) => {\r\n\r\n    let cardClass = classNames({\r\n        'flipper' : true,\r\n        'flipped' : card.flipped || card.discovered\r\n    });\r\n\r\n    return (\r\n        <li className=\"flip-container\">\r\n            <div className={cardClass}>\r\n                <div className=\"front\" onClick={() => flipCard(card.id)}></div>\r\n        \t\t<div className=\"back\">\r\n                    <img src={card.url} alt=\"\" />\r\n        \t\t</div>\r\n        \t</div>\r\n        </li>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport CardListItem from './CardListItem';\r\n\r\nexport default ({\r\n    cards,\r\n    flipCard\r\n}) => (\r\n    <ul className=\"cards\">\r\n        {\r\n            cards.map(card =>\r\n                <CardListItem\r\n                    key={card.id}\r\n                    card={card}\r\n                    flipCard={flipCard}\r\n                />\r\n            )\r\n        }\r\n    </ul>\r\n)\r\n","import { FLIP_CARD, RESTART_GAME } from '../constants/memory';\r\n\r\nconst MemoryActions = {\r\n\r\n    flipCard : (id) => ({\r\n        type : FLIP_CARD,\r\n        id\r\n    }),\r\n\r\n    restart : () => ({\r\n        type : RESTART_GAME\r\n    })\r\n\r\n}\r\n\r\nexport default MemoryActions\r\n","import React, { Component }  from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Header from '../components/Header'\r\nimport CardList from '../components/CardList'\r\nimport MemoryActions from '../actions/memory'\r\n\r\nimport \"./Memory.css\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n    memory : state.memory\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    actions: bindActionCreators(MemoryActions, dispatch)\r\n});\r\n\r\nclass Memory extends Component {\r\n    render() {\r\n        const { memory, actions, goBackToVideo } = this.props;\r\n        const gameFinished = !memory.cards.some(card => !card.discovered);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Header round={memory.round} gameFinished={gameFinished} goBackToVideo={goBackToVideo} />\r\n                <CardList ref={this.myRef} cards={memory.cards} flipCard={actions.flipCard} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Memory);\r\n"],"sourceRoot":""}